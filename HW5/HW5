
#calculate the running average for a list of nums
def runningAverage(L):
    #create the newlist we will append each num to
    newlist=[]
    #running sum that changes
    sum = 0
    #for every num in the range of first to last index we will do this
    for n in range(0,len(L)):
        #the total is initialized to 0 and we will build off this
        sum+=L[n] 
        #every time we add to the total we increase the num of ints 
        n = n+1
        #the formula for averages
        currentAvg = sum/n
        #add the currentAvg to list
        newlist.append(currentAvg)
    #return our newlist
    return newlist
    
print(runningAverage([1,2,3,4,5]))
print(runningAverage([0,5]))
print(runningAverage([0,0,9]))
print(runningAverage([10,15,20]))

def customMap(f,L):
    #create a newlist to add elements to
    newlist = []
    #for all the elements in the range of 0 to the last element in list do...
    for n in range(0,len(L)):
        #perform the operation on L[n] then append it to the newlist
        newlist.append(f(L[n]))
    #return the newlist
    return newlist

def half(n):
    return n/2  
def double(n):
    return 2*n
def triple(n):
    return 3*n

def customFilter(f,L):
    #create a newlist to add elements to
    newlist = []
    #for all elements in the range of 0 to the last element in list do...
    for n in range(0,len(L)):
        #if the function of 'f' applies to element L[n] we will add to newlist
        if f(L[n]):
            newlist.append(f(L[n]))
    #we will store the newlist
    return newlist
def isEven(n):
    if n%2 ==0:
        return n

def isOdd(n):
    if n%2!=0:
        return n

def lessThan3(n):
    if len(n)<3:
        return n

print(customMap(half,[5,2,10]))
print(customMap(triple,[4,0,109]))
print(customFilter(isEven,[1,2,3,6]))
print(customFilter(isEven,[1,3,5]))
print(customFilter(isOdd,[1,2,3]))
print(customFilter(lessThan3,["feed", "me", "a", "cat"]))

def removeAdjDuplicates(L):
    newlist = []
    #start i for our index builder
    i =0
    #start off by adding the first int to the list no matter what (not sure why this works)
    newlist.append(L[i])
    #for each  index in the range of indexes we will do this
    for i in range(0,len(L)-1):
        #if index i is not equal to index i+1 we will add it to the list
        if L[i] !=L[i+1]:
            newlist.append(L[i+1])
            i = i+1
        #if it is equal we we ignore this an add to the iterator
        elif L[i]==L[i+1]:
            i = i+1
    #return the newlist which has been populated with these answers
    return newlist

print(removeAdjDuplicates([1,1,1,2,3,4,1,5,5,5,5,5]))
print(removeAdjDuplicates([1,2,3]))
print(removeAdjDuplicates([1,1,1,1,1,4,1]))

def flatten(L):
    #create newlist to add vals to
    newlist = []
    #create i value to be our incrementor
    i = 0
    #while i is less than or equal to the length of list we will do...
    while i<=len(L)-1:
        #if the num is a list we will make the newlist = val
        if isinstance(L[i],list):
            newlist = newlist +flatten(L[i])
            #always add the incrementor
            i = i+1
        elif not isinstance(L[i],list):
            #if the val is not a list type we will simply append the value
            newlist.append(L[i])
            #always add the incrementor
            i = i+1
    return newlist

print(flatten([1,2,[3,4],5,[6,[7,8]]]))
print(flatten([1,2,3,4]))
print(flatten([1,[2,3],4]))
